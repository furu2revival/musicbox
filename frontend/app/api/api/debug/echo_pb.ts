// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file api/debug/echo.proto (package api.debug, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
	BinaryReadOptions,
	FieldList,
	JsonReadOptions,
	JsonValue,
	PartialMessage,
	PlainMessage,
} from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message api.debug.EchoServiceEchoV1Request
 */
export class EchoServiceEchoV1Request extends Message<EchoServiceEchoV1Request> {
	/**
	 * @generated from field: string message = 1;
	 */
	message = "";

	constructor(data?: PartialMessage<EchoServiceEchoV1Request>) {
		super();
		proto3.util.initPartial(data, this);
	}

	static readonly runtime: typeof proto3 = proto3;
	static readonly typeName = "api.debug.EchoServiceEchoV1Request";
	static readonly fields: FieldList = proto3.util.newFieldList(() => [
		{ no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
	]);

	static fromBinary(
		bytes: Uint8Array,
		options?: Partial<BinaryReadOptions>
	): EchoServiceEchoV1Request {
		return new EchoServiceEchoV1Request().fromBinary(bytes, options);
	}

	static fromJson(
		jsonValue: JsonValue,
		options?: Partial<JsonReadOptions>
	): EchoServiceEchoV1Request {
		return new EchoServiceEchoV1Request().fromJson(jsonValue, options);
	}

	static fromJsonString(
		jsonString: string,
		options?: Partial<JsonReadOptions>
	): EchoServiceEchoV1Request {
		return new EchoServiceEchoV1Request().fromJsonString(jsonString, options);
	}

	static equals(
		a:
			| EchoServiceEchoV1Request
			| PlainMessage<EchoServiceEchoV1Request>
			| undefined,
		b:
			| EchoServiceEchoV1Request
			| PlainMessage<EchoServiceEchoV1Request>
			| undefined
	): boolean {
		return proto3.util.equals(EchoServiceEchoV1Request, a, b);
	}
}

/**
 * @generated from message api.debug.EchoServiceEchoV1Response
 */
export class EchoServiceEchoV1Response extends Message<EchoServiceEchoV1Response> {
	/**
	 * @generated from field: string message = 1;
	 */
	message = "";

	/**
	 * @generated from field: google.protobuf.Timestamp timestamp = 2;
	 */
	timestamp?: Timestamp;

	constructor(data?: PartialMessage<EchoServiceEchoV1Response>) {
		super();
		proto3.util.initPartial(data, this);
	}

	static readonly runtime: typeof proto3 = proto3;
	static readonly typeName = "api.debug.EchoServiceEchoV1Response";
	static readonly fields: FieldList = proto3.util.newFieldList(() => [
		{ no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
		{ no: 2, name: "timestamp", kind: "message", T: Timestamp },
	]);

	static fromBinary(
		bytes: Uint8Array,
		options?: Partial<BinaryReadOptions>
	): EchoServiceEchoV1Response {
		return new EchoServiceEchoV1Response().fromBinary(bytes, options);
	}

	static fromJson(
		jsonValue: JsonValue,
		options?: Partial<JsonReadOptions>
	): EchoServiceEchoV1Response {
		return new EchoServiceEchoV1Response().fromJson(jsonValue, options);
	}

	static fromJsonString(
		jsonString: string,
		options?: Partial<JsonReadOptions>
	): EchoServiceEchoV1Response {
		return new EchoServiceEchoV1Response().fromJsonString(jsonString, options);
	}

	static equals(
		a:
			| EchoServiceEchoV1Response
			| PlainMessage<EchoServiceEchoV1Response>
			| undefined,
		b:
			| EchoServiceEchoV1Response
			| PlainMessage<EchoServiceEchoV1Response>
			| undefined
	): boolean {
		return proto3.util.equals(EchoServiceEchoV1Response, a, b);
	}
}
