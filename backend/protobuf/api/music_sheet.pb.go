// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: api/music_sheet.proto

package api

import (
	_ "github.com/furu2revival/musicbox/protobuf/custom_option"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 音階を表します。
type Pitch int32

const (
	Pitch_PITCH_UNSPECIFIED Pitch = 0
	Pitch_PITCH_C3          Pitch = 1
	Pitch_PITCH_D3          Pitch = 2
	Pitch_PITCH_E3          Pitch = 3
	Pitch_PITCH_F3          Pitch = 4
	Pitch_PITCH_G3          Pitch = 5
	Pitch_PITCH_A4          Pitch = 6
	Pitch_PITCH_B4          Pitch = 7
	Pitch_PITCH_C4          Pitch = 8
)

// Enum value maps for Pitch.
var (
	Pitch_name = map[int32]string{
		0: "PITCH_UNSPECIFIED",
		1: "PITCH_C3",
		2: "PITCH_D3",
		3: "PITCH_E3",
		4: "PITCH_F3",
		5: "PITCH_G3",
		6: "PITCH_A4",
		7: "PITCH_B4",
		8: "PITCH_C4",
	}
	Pitch_value = map[string]int32{
		"PITCH_UNSPECIFIED": 0,
		"PITCH_C3":          1,
		"PITCH_D3":          2,
		"PITCH_E3":          3,
		"PITCH_F3":          4,
		"PITCH_G3":          5,
		"PITCH_A4":          6,
		"PITCH_B4":          7,
		"PITCH_C4":          8,
	}
)

func (x Pitch) Enum() *Pitch {
	p := new(Pitch)
	*p = x
	return p
}

func (x Pitch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pitch) Descriptor() protoreflect.EnumDescriptor {
	return file_api_music_sheet_proto_enumTypes[0].Descriptor()
}

func (Pitch) Type() protoreflect.EnumType {
	return &file_api_music_sheet_proto_enumTypes[0]
}

func (x Pitch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pitch.Descriptor instead.
func (Pitch) EnumDescriptor() ([]byte, []int) {
	return file_api_music_sheet_proto_rawDescGZIP(), []int{0}
}

type MusicSheetServiceGetV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicSheetId string `protobuf:"bytes,1,opt,name=music_sheet_id,json=musicSheetId,proto3" json:"music_sheet_id,omitempty"`
}

func (x *MusicSheetServiceGetV1Request) Reset() {
	*x = MusicSheetServiceGetV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_music_sheet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSheetServiceGetV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSheetServiceGetV1Request) ProtoMessage() {}

func (x *MusicSheetServiceGetV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_music_sheet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSheetServiceGetV1Request.ProtoReflect.Descriptor instead.
func (*MusicSheetServiceGetV1Request) Descriptor() ([]byte, []int) {
	return file_api_music_sheet_proto_rawDescGZIP(), []int{0}
}

func (x *MusicSheetServiceGetV1Request) GetMusicSheetId() string {
	if x != nil {
		return x.MusicSheetId
	}
	return ""
}

type MusicSheetServiceGetV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicSheet *MusicSheet `protobuf:"bytes,1,opt,name=music_sheet,json=musicSheet,proto3" json:"music_sheet,omitempty"`
}

func (x *MusicSheetServiceGetV1Response) Reset() {
	*x = MusicSheetServiceGetV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_music_sheet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSheetServiceGetV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSheetServiceGetV1Response) ProtoMessage() {}

func (x *MusicSheetServiceGetV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_music_sheet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSheetServiceGetV1Response.ProtoReflect.Descriptor instead.
func (*MusicSheetServiceGetV1Response) Descriptor() ([]byte, []int) {
	return file_api_music_sheet_proto_rawDescGZIP(), []int{1}
}

func (x *MusicSheetServiceGetV1Response) GetMusicSheet() *MusicSheet {
	if x != nil {
		return x.MusicSheet
	}
	return nil
}

type MusicSheetServiceCreateV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Notes []*Note `protobuf:"bytes,2,rep,name=notes,proto3" json:"notes,omitempty"`
}

func (x *MusicSheetServiceCreateV1Request) Reset() {
	*x = MusicSheetServiceCreateV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_music_sheet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSheetServiceCreateV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSheetServiceCreateV1Request) ProtoMessage() {}

func (x *MusicSheetServiceCreateV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_music_sheet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSheetServiceCreateV1Request.ProtoReflect.Descriptor instead.
func (*MusicSheetServiceCreateV1Request) Descriptor() ([]byte, []int) {
	return file_api_music_sheet_proto_rawDescGZIP(), []int{2}
}

func (x *MusicSheetServiceCreateV1Request) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MusicSheetServiceCreateV1Request) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

type MusicSheetServiceCreateV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicSheetId string `protobuf:"bytes,1,opt,name=music_sheet_id,json=musicSheetId,proto3" json:"music_sheet_id,omitempty"`
}

func (x *MusicSheetServiceCreateV1Response) Reset() {
	*x = MusicSheetServiceCreateV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_music_sheet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSheetServiceCreateV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSheetServiceCreateV1Response) ProtoMessage() {}

func (x *MusicSheetServiceCreateV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_music_sheet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSheetServiceCreateV1Response.ProtoReflect.Descriptor instead.
func (*MusicSheetServiceCreateV1Response) Descriptor() ([]byte, []int) {
	return file_api_music_sheet_proto_rawDescGZIP(), []int{3}
}

func (x *MusicSheetServiceCreateV1Response) GetMusicSheetId() string {
	if x != nil {
		return x.MusicSheetId
	}
	return ""
}

// 楽譜を表します。
type MusicSheet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicSheetId string  `protobuf:"bytes,1,opt,name=music_sheet_id,json=musicSheetId,proto3" json:"music_sheet_id,omitempty"`
	Title        string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Notes        []*Note `protobuf:"bytes,3,rep,name=notes,proto3" json:"notes,omitempty"`
}

func (x *MusicSheet) Reset() {
	*x = MusicSheet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_music_sheet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicSheet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicSheet) ProtoMessage() {}

func (x *MusicSheet) ProtoReflect() protoreflect.Message {
	mi := &file_api_music_sheet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicSheet.ProtoReflect.Descriptor instead.
func (*MusicSheet) Descriptor() ([]byte, []int) {
	return file_api_music_sheet_proto_rawDescGZIP(), []int{4}
}

func (x *MusicSheet) GetMusicSheetId() string {
	if x != nil {
		return x.MusicSheetId
	}
	return ""
}

func (x *MusicSheet) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MusicSheet) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

// 音符を表します。
// ここでは 16 分音符のみを扱います。
type Note struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pitches []Pitch `protobuf:"varint,1,rep,packed,name=pitches,proto3,enum=api.Pitch" json:"pitches,omitempty"`
}

func (x *Note) Reset() {
	*x = Note{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_music_sheet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_api_music_sheet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_api_music_sheet_proto_rawDescGZIP(), []int{5}
}

func (x *Note) GetPitches() []Pitch {
	if x != nil {
		return x.Pitches
	}
	return nil
}

var File_api_music_sheet_proto protoreflect.FileDescriptor

var file_api_music_sheet_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x21, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x45, 0x0a, 0x1d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x65, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x53,
	0x68, 0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x1e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53,
	0x68, 0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x65, 0x65, 0x74, 0x52, 0x0a,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x65, 0x65, 0x74, 0x22, 0x59, 0x0a, 0x20, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x53, 0x68, 0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x21, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68,
	0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x65, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x69, 0x0a, 0x0a, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x65, 0x65, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x65,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x04, 0x4e,
	0x6f, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x69, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x69, 0x74, 0x63, 0x68,
	0x52, 0x07, 0x70, 0x69, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2a, 0x8e, 0x01, 0x0a, 0x05, 0x50, 0x69,
	0x74, 0x63, 0x68, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x49,
	0x54, 0x43, 0x48, 0x5f, 0x43, 0x33, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x49, 0x54, 0x43,
	0x48, 0x5f, 0x44, 0x33, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x49, 0x54, 0x43, 0x48, 0x5f,
	0x45, 0x33, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x46, 0x33,
	0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x47, 0x33, 0x10, 0x05,
	0x12, 0x0c, 0x0a, 0x08, 0x50, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x41, 0x34, 0x10, 0x06, 0x12, 0x0c,
	0x0a, 0x08, 0x50, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x42, 0x34, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08,
	0x50, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x34, 0x10, 0x08, 0x32, 0xa9, 0x02, 0x0a, 0x11, 0x4d,
	0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x7e, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x56, 0x31, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x65, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2c, 0x82, 0xb5, 0x18, 0x28, 0x0a, 0x26, 0x08, 0xd1, 0x0f, 0x10, 0x04, 0x1a,
	0x1f, 0x54, 0x68, 0x65, 0x20, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x20, 0x73, 0x68, 0x65, 0x65, 0x74,
	0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2e,
	0x12, 0x93, 0x01, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x31, 0x12, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x65, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x53, 0x68, 0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xb5,
	0x18, 0x34, 0x0a, 0x32, 0x08, 0xd0, 0x0f, 0x10, 0x04, 0x1a, 0x2b, 0x54, 0x68, 0x65, 0x20, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x20, 0x6d, 0x75, 0x73, 0x74,
	0x20, 0x62, 0x65, 0x20, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x20, 0x31, 0x20, 0x61, 0x6e,
	0x64, 0x20, 0x31, 0x30, 0x30, 0x2e, 0x42, 0x75, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70,
	0x69, 0x42, 0x0f, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x65, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x75, 0x72, 0x75, 0x32, 0x72, 0x65, 0x76, 0x69, 0x76, 0x61, 0x6c, 0x2f, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x62, 0x6f, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x03, 0x41, 0x70, 0x69, 0xca,
	0x02, 0x03, 0x41, 0x70, 0x69, 0xe2, 0x02, 0x0f, 0x41, 0x70, 0x69, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x03, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_music_sheet_proto_rawDescOnce sync.Once
	file_api_music_sheet_proto_rawDescData = file_api_music_sheet_proto_rawDesc
)

func file_api_music_sheet_proto_rawDescGZIP() []byte {
	file_api_music_sheet_proto_rawDescOnce.Do(func() {
		file_api_music_sheet_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_music_sheet_proto_rawDescData)
	})
	return file_api_music_sheet_proto_rawDescData
}

var file_api_music_sheet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_music_sheet_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_music_sheet_proto_goTypes = []any{
	(Pitch)(0),                                // 0: api.Pitch
	(*MusicSheetServiceGetV1Request)(nil),     // 1: api.MusicSheetServiceGetV1Request
	(*MusicSheetServiceGetV1Response)(nil),    // 2: api.MusicSheetServiceGetV1Response
	(*MusicSheetServiceCreateV1Request)(nil),  // 3: api.MusicSheetServiceCreateV1Request
	(*MusicSheetServiceCreateV1Response)(nil), // 4: api.MusicSheetServiceCreateV1Response
	(*MusicSheet)(nil),                        // 5: api.MusicSheet
	(*Note)(nil),                              // 6: api.Note
}
var file_api_music_sheet_proto_depIdxs = []int32{
	5, // 0: api.MusicSheetServiceGetV1Response.music_sheet:type_name -> api.MusicSheet
	6, // 1: api.MusicSheetServiceCreateV1Request.notes:type_name -> api.Note
	6, // 2: api.MusicSheet.notes:type_name -> api.Note
	0, // 3: api.Note.pitches:type_name -> api.Pitch
	1, // 4: api.MusicSheetService.GetV1:input_type -> api.MusicSheetServiceGetV1Request
	3, // 5: api.MusicSheetService.CreateV1:input_type -> api.MusicSheetServiceCreateV1Request
	2, // 6: api.MusicSheetService.GetV1:output_type -> api.MusicSheetServiceGetV1Response
	4, // 7: api.MusicSheetService.CreateV1:output_type -> api.MusicSheetServiceCreateV1Response
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_music_sheet_proto_init() }
func file_api_music_sheet_proto_init() {
	if File_api_music_sheet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_music_sheet_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MusicSheetServiceGetV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_music_sheet_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MusicSheetServiceGetV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_music_sheet_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MusicSheetServiceCreateV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_music_sheet_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MusicSheetServiceCreateV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_music_sheet_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MusicSheet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_music_sheet_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Note); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_music_sheet_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_music_sheet_proto_goTypes,
		DependencyIndexes: file_api_music_sheet_proto_depIdxs,
		EnumInfos:         file_api_music_sheet_proto_enumTypes,
		MessageInfos:      file_api_music_sheet_proto_msgTypes,
	}.Build()
	File_api_music_sheet_proto = out.File
	file_api_music_sheet_proto_rawDesc = nil
	file_api_music_sheet_proto_goTypes = nil
	file_api_music_sheet_proto_depIdxs = nil
}
